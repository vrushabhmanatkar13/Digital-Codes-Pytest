{"name": "Test Landing Page", "status": "failed", "statusDetails": {"message": "AssertionError: None", "trace": "self = <test_cases.test_03_TitleLandingPage.Test_TitleLandingPage object at 0x000001491EDEEDD0>\nrequest = <FixtureRequest for <Function test_Title_Landing_Page[Browse Contents-I-Codes-2021 I-Codes-2021 International Residential Code (IRC)-PREMIUM]>>\nOptionL1 = 'Browse Contents', OptionL2 = 'I-Codes', OptionL3 = '2021 I-Codes'\nTitle_Name = '2021 International Residential Code (IRC)', Tag = 'PREMIUM'\n\n    @allure.title(\"Test Landing Page\")\n    @allure.tag(\"Landing Page\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.description(\n        \"Verify that user able to navigate to landing page of title and verify the tag and active premium text for premium title\")\n    @pytest.mark.parametrize([\"OptionL1\", \"OptionL2\", \"OptionL3\", \"Title_Name\", \"Tag\"],\n                             read_excle.get_data(\"Premium Complete\", \"Verify Title Landing Page for PC\"))\n    def test_Title_Landing_Page(self, request, OptionL1, OptionL2, OptionL3, Title_Name, Tag):\n        \"\"\"\n        Test case for verify landig page, tag name and Active Premium Text for title\n        \"\"\"\n        test_logger = get_logger(request.node.name)\n        self.click_Title_Cover(OptionL1, OptionL2, OptionL3, Title_Name)\n        title_name = self.titlelandingpage.get_title_name()\n        tag_name = self.titlelandingpage.get_title_tag()\n        trial_text = self.titlelandingpage.get_Start_Trial_text(Test_TitleLandingPage.subscription)\n        premium_text = self.titlelandingpage.get_active_premium_text(tag_name)\n        # category = self.titlelandingpage.get_first_category()\n    \n        \"\"\"\n        Assertions for Title name , Tag name and Active Premium text\n        \"\"\"\n        BaseClass.assert_equals(Title_Name, title_name, test_logger)\n>       BaseClass.assert_equals(Tag, tag_name, test_logger)\n\ntest_cases\\test_03_TitleLandingPage.py:49: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nExpected = 'PREMIUM', Actual = 'BASIC PLUS'\ntest_logger = <Logger test_Title_Landing_Page[Browse Contents-I-Codes-2021 I-Codes-2021 International Residential Code (IRC)-PREMIUM] (INFO)>\n\n    @staticmethod\n    def assert_equals(Expected, Actual, test_logger: logging.Logger):\n>       assert Expected == Actual, (\n            test_logger.error(f\"Expected: {Expected}, Found: {Actual}\")\n    \n        )\nE       AssertionError: None\n\nutiilites\\BaseClass.py:105: AssertionError"}, "description": "Verify that user able to navigate to landing page of title and verify the tag and active premium text for premium title", "steps": [{"name": "Click on Title Cover", "status": "passed", "steps": [{"name": "click Menu", "status": "passed", "start": 1700993218886, "stop": 1700993218951}, {"name": "click 'Browse Contents'", "status": "passed", "parameters": [{"name": "option_text", "value": "'Browse Contents'"}], "start": 1700993219462, "stop": 1700993219687}, {"name": "click 'I-Codes'", "status": "passed", "parameters": [{"name": "option_text", "value": "'I-Codes'"}], "start": 1700993219687, "stop": 1700993219933}, {"name": "click '2021 I-Codes'", "status": "passed", "parameters": [{"name": "sub_option_text", "value": "'2021 I-Codes'"}], "start": 1700993219933, "stop": 1700993221678}, {"name": "click '2021 International Residential Code (IRC)'", "status": "passed", "parameters": [{"name": "title_name", "value": "'2021 International Residential Code (IRC)'"}], "start": 1700993221678, "stop": 1700993224489}], "parameters": [{"name": "category", "value": "'Browse Contents'"}, {"name": "option", "value": "'I-Codes'"}, {"name": "sub_option", "value": "'2021 I-Codes'"}, {"name": "title", "value": "'2021 International Residential Code (IRC)'"}], "start": 1700993218886, "stop": 1700993224489}, {"name": "Get Title Name", "status": "passed", "steps": [{"name": "2021 International Residential Code (IRC)", "status": "passed", "start": 1700993225426, "stop": 1700993225426}], "start": 1700993224489, "stop": 1700993225426}, {"name": "Get Title Tag", "status": "passed", "steps": [{"name": "BASIC PLUS", "status": "passed", "start": 1700993225482, "stop": 1700993225482}], "start": 1700993225426, "stop": 1700993225482}, {"name": "Get text of Start Trial for 'Premium Complete'", "status": "passed", "parameters": [{"name": "subscription_type", "value": "'Premium Complete'"}], "start": 1700993225482, "stop": 1700993225482}, {"name": "Get Active Premium Text for 'BASIC PLUS'", "status": "passed", "parameters": [{"name": "tag_name", "value": "'BASIC PLUS'"}], "start": 1700993225482, "stop": 1700993225482}], "attachments": [{"name": "log", "source": "e1162fe3-be29-4a84-830d-9ba8e8416f5d-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "OptionL1", "value": "'Browse Contents'"}, {"name": "OptionL2", "value": "'I-Codes'"}, {"name": "OptionL3", "value": "'2021 I-Codes'"}, {"name": "Title_Name", "value": "'2021 International Residential Code (IRC)'"}, {"name": "Tag", "value": "'PREMIUM'"}], "start": 1700993218886, "stop": 1700993225482, "uuid": "7270e83f-6b96-4649-8a98-78aaaa8a9592", "historyId": "8ca301e7daa80d8bfc06bdd9a8c57bf8", "testCaseId": "a4a1257f53b8920cf6df6d7ed358b28a", "fullName": "test_cases.test_03_TitleLandingPage.Test_TitleLandingPage#test_Title_Landing_Page", "labels": [{"name": "tag", "value": "Landing Page"}, {"name": "severity", "value": "critical"}, {"name": "feature", "value": "Title Landing Page and TOC of Title"}, {"name": "tag", "value": "@pytest.mark.usefixtures('Setup_TearDown')"}, {"name": "parentSuite", "value": "test_cases"}, {"name": "suite", "value": "test_03_TitleLandingPage"}, {"name": "subSuite", "value": "Test_TitleLandingPage"}, {"name": "host", "value": "IB-Pune-LAP-329"}, {"name": "thread", "value": "17708-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cases.test_03_TitleLandingPage"}]}